# -*- coding: utf-8 -*-

from typing import Dict, Set


def __build_language_to_code(code_to_language: Dict[str, str]) -> Dict[str, str]:
    language_to_code: Dict[str, str] = {}
    for code, language in code_to_language.items():
        language_to_code[language.lower()] = code
    return language_to_code


ISO_639_1_TO_LANGUAGE: Dict[str, str] = {
    'aa': 'Afar',
    'ab': 'Abkhaz',
    'ae': 'Avestan',
    'af': 'Afrikaans',
    'ak': 'Akan',
    'am': 'Amharic',
    'an': 'Aragonese',
    'ar': 'Arabic',
    'as': 'Assamese',
    'av': 'Avaric',
    'ay': 'Aymara',
    'az': 'Azerbaijani',
    'ba': 'Bashkir',
    'be': 'Belarusian',
    'bg': 'Bulgarian',
    'bh': 'Bihari',
    'bi': 'Bislama',
    'bm': 'Bambara',
    'bn': 'Bengali',
    'bo': 'Tibetan',
    'br': 'Breton',
    'bs': 'Bosnian',
    'ca': 'Catalan',
    'ce': 'Chechen',
    'ch': 'Chamorro',
    'co': 'Corsican',
    'cr': 'Cree',
    'cs': 'Czech',
    'cu': 'Old Church Slavonic',
    'cv': 'Chuvash',
    'cy': 'Welsh',
    'da': 'Danish',
    'de': 'German',
    'dv': 'Divehi',
    'dz': 'Dzongkha',
    'ee': 'Ewe',
    'el': 'Greek, Modern',
    'en': 'English',
    'eo': 'Esperanto',
    'es': 'Spanish',
    'et': 'Estonian',
    'eu': 'Basque',
    'fa': 'Persian',
    'ff': 'Fula',
    'fi': 'Finnish',
    'fj': 'Fijian',
    'fo': 'Faroese',
    'fr': 'French',
    'fy': 'Western Frisian',
    'ga': 'Irish',
    'gd': 'Scottish Gaelic',
    'gl': 'Galician',
    'gn': 'Guaraní',
    'gu': 'Gujarati',
    'gv': 'Manx',
    'ha': 'Hausa',
    'he': 'Hebrew',
    'hi': 'Hindi',
    'ho': 'Hiri Motu',
    'hr': 'Croatian',
    'ht': 'Haitian',
    'hu': 'Hungarian',
    'hy': 'Armenian',
    'hz': 'Herero',
    'ia': 'Interlingua',
    'id': 'Indonesian',
    'ie': 'Interlingue',
    'ig': 'Igbo',
    'ii': 'Nuosu',
    'ik': 'Inupiaq',
    'io': 'Ido',
    'is': 'Icelandic',
    'it': 'Italian',
    'iu': 'Inuktitut',
    'ja': 'Japanese',
    'jv': 'Javanese',
    'ka': 'Georgian',
    'kg': 'Kongo',
    'ki': 'Kikuyu',
    'kj': 'Kwanyama',
    'kk': 'Kazakh',
    'kl': 'Kalaallisut',
    'km': 'Khmer',
    'kn': 'Kannada',
    'ko': 'Korean',
    'kr': 'Kanuri',
    'ks': 'Kashmiri',
    'ku': 'Kurdish',
    'kv': 'Komi',
    'kw': 'Cornish',
    'ky': 'Kirghiz',
    'la': 'Latin',
    'lb': 'Luxembourgish',
    'lg': 'Luganda',
    'li': 'Limburgish',
    'ln': 'Lingala',
    'lo': 'Lao',
    'lt': 'Lithuanian',
    'lu': 'Luba-Katanga',
    'lv': 'Latvian',
    'mg': 'Malagasy',
    'mh': 'Marshallese',
    'mi': 'Māori',
    'mk': 'Macedonian',
    'ml': 'Malayalam',
    'mn': 'Mongolian',
    'mr': 'Marathi',
    'ms': 'Malay',
    'mt': 'Maltese',
    'my': 'Burmese',
    'na': 'Nauru',
    'nb': 'Norwegian Bokmål',
    'nd': 'North Ndebele',
    'ne': 'Nepali',
    'ng': 'Ndonga',
    'nl': 'Dutch',
    'nn': 'Norwegian Nynorsk',
    'no': 'Norwegian',
    'nr': 'South Ndebele',
    'nv': 'Navajo',
    'ny': 'Chichewa',
    'oc': 'Occitan',
    'oj': 'Ojibwe',
    'om': 'Oromo',
    'or': 'Oriya',
    'os': 'Ossetian',
    'pa': 'Panjabi',
    'pi': 'Pāli',
    'pl': 'Polish',
    'ps': 'Pashto',
    'pt': 'Portuguese',
    'qu': 'Quechua',
    'rm': 'Romansh',
    'rn': 'Kirundi',
    'ro': 'Romaniann',
    'ru': 'Russian',
    'rw': 'Kinyarwanda',
    'sa': 'Sanskrit',
    'sc': 'Sardinian',
    'sd': 'Sindhi',
    'se': 'Northern Sami',
    'sg': 'Sango',
    'si': 'Sinhala',
    'sk': 'Slovak',
    'sl': 'Slovene',
    'sm': 'Samoan',
    'sn': 'Shona',
    'so': 'Somali',
    'sq': 'Albanian',
    'sr': 'Serbian',
    'ss': 'Swati',
    'st': 'Southern Sotho',
    'su': 'Sundanese',
    'sv': 'Swedish',
    'sw': 'Swahili',
    'ta': 'Tamil',
    'te': 'Telugu',
    'tg': 'Tajik',
    'th': 'Thai',
    'ti': 'Tigrinya',
    'tk': 'Turkmen',
    'tl': 'Tagalog',
    'tn': 'Tswana',
    'to': 'Tonga',
    'tr': 'Turkish',
    'ts': 'Tsonga',
    'tt': 'Tatar',
    'tw': 'Twi',
    'ty': 'Tahitian',
    'ug': 'Uighur',
    'uk': 'Ukrainian',
    'ur': 'Urdu',
    'uz': 'Uzbek',
    've': 'Venda',
    'vi': 'Vietnamese',
    'vo': 'Volapük',
    'wa': 'Walloon',
    'wo': 'Wolof',
    'xh': 'Xhosa',
    'yi': 'Yiddish',
    'yo': 'Yoruba',
    'za': 'Zhuang',
    'zh': 'Chinese',
    'zu': 'Zulu',
}

ISO_639_2_TO_LANGUAGE: Dict[str, str] = {
    'aar': 'Afar',
    'abk': 'Abkhazian',
    'ace': 'Achinese',
    'ach': 'Acoli',
    'ada': 'Adangme',
    'ady': 'Adyghe',
    'afa': 'Afro-Asiatic',
    'afh': 'Afrihili',
    'afr': 'Afrikaans',
    'ain': 'Ainu',
    'aka': 'Akan',
    'akk': 'Akkadian',
    'alb': 'Albanian',
    'ale': 'Aleut',
    'alg': 'Algonquian',
    'alt': 'Southern Altai',
    'amh': 'Amharic',
    'anp': 'Angika',
    'apa': 'Apache',
    'ara': 'Arabic',
    'arc': 'Aramaic',
    'arg': 'Aragonese',
    'arm': 'Armenian',
    'arn': 'Mapudungun',
    'arp': 'Arapaho',
    'art': 'Artificial',
    'arw': 'Arawak',
    'asm': 'Assamese',
    'ast': 'Asturian',
    'ath': 'Athapascan',
    'aus': 'Australian',
    'ava': 'Avaric',
    'ave': 'Avestan',
    'awa': 'Awadhi',
    'aym': 'Aymara',
    'aze': 'Azerbaijani',
    'bad': 'Banda',
    'bai': 'Bamileke',
    'bak': 'Bashkir',
    'bal': 'Baluchi',
    'bam': 'Bambara',
    'ban': 'Balinese',
    'baq': 'Basque',
    'bas': 'Basa',
    'bat': 'Baltic',
    'bej': 'Beja',
    'bel': 'Belarusian',
    'bem': 'Bemba',
    'ben': 'Bengali',
    'ber': 'Berber',
    'bho': 'Bhojpuri',
    'bih': 'Bihari',
    'bik': 'Bikol',
    'bin': 'Bini; Edo',
    'bis': 'Bislama',
    'bla': 'Siksika',
    'bnt': 'Bantu',
    'bos': 'Bosnian',
    'bra': 'Braj',
    'bre': 'Breton',
    'btk': 'Batak',
    'bua': 'Buriat',
    'bug': 'Buginese',
    'bul': 'Bulgarian',
    'bur': 'Burmese',
    'byn': 'Blin',
    'cad': 'Caddo',
    'cai': 'Central American Indian',
    'car': 'Galibi Carib',
    'cat': 'Catalan',
    'cau': 'Caucasian',
    'ceb': 'Cebuano',
    'cel': 'Celtic',
    'cha': 'Chamorro',
    'chb': 'Chibcha',
    'che': 'Chechen',
    'chg': 'Chagatai',
    'chi': 'Chinese',
    'chk': 'Chuukese',
    'chm': 'Mari',
    'chn': 'Chinook jargon',
    'cho': 'Choctaw',
    'chp': 'Chipewyan',
    'chr': 'Cherokee',
    'chu': 'Church Slavic',
    'chv': 'Chuvash',
    'chy': 'Cheyenne',
    'cmc': 'Chamic',
    'cop': 'Coptic',
    'cor': 'Cornish',
    'cos': 'Corsican',
    'cpe': 'Creoles and pidgins, English based',
    'cpf': 'Creoles and pidgins, French-based',
    'cpp': 'Creoles and pidgins, Portuguese-based',
    'cre': 'Cree',
    'crh': 'Crimean Tatar',
    'crp': 'Creoles and pidgins',
    'csb': 'Kashubian',
    'cus': 'Cushitic',
    'cze': 'Czech',
    'dak': 'Dakota',
    'dan': 'Danish',
    'dar': 'Dargwa',
    'day': 'Land Dayak',
    'del': 'Delaware',
    'den': 'Slave',
    'dgr': 'Dogrib',
    'din': 'Dinka',
    'div': 'Divehi',
    'doi': 'Dogri',
    'dra': 'Dravidian',
    'dsb': 'Lower Sorbian',
    'dua': 'Duala',
    'dut': 'Dutch',
    'dyu': 'Dyula',
    'dzo': 'Dzongkha',
    'efi': 'Efik',
    'eka': 'Ekajuk',
    'elx': 'Elamite',
    'eng': 'English',
    'epo': 'Esperanto',
    'est': 'Estonian',
    'ewe': 'Ewe',
    'ewo': 'Ewondo',
    'fan': 'Fang',
    'fao': 'Faroese',
    'fat': 'Fanti',
    'fij': 'Fijian',
    'fil': 'Filipino',
    'fin': 'Finnish',
    'fiu': 'Finno-Ugrian',
    'fon': 'Fon',
    'fre': 'French',
    'frr': 'Northern Frisian',
    'frs': 'Eastern Frisian',
    'fry': 'Western Frisian',
    'ful': 'Fulah',
    'fur': 'Friulian',
    'gaa': 'Ga',
    'gay': 'Gayo',
    'gba': 'Gbaya',
    'gem': 'Germanic',
    'geo': 'Georgian',
    'ger': 'German',
    'gez': 'Geez',
    'gil': 'Gilbertese',
    'gla': 'Gaelic',
    'gle': 'Irish',
    'glg': 'Galician',
    'glv': 'Manx',
    'gon': 'Gondi',
    'gor': 'Gorontalo',
    'got': 'Gothic',
    'grb': 'Grebo',
    'gre': 'Greek',
    'grn': 'Guarani',
    'gsw': 'Swiss German',
    'guj': 'Gujarati',
    'gwi': "Gwich'in",
    'hai': 'Haida',
    'hat': 'Haitian',
    'hau': 'Hausa',
    'haw': 'Hawaiian',
    'heb': 'Hebrew',
    'her': 'Herero',
    'hil': 'Hiligaynon',
    'him': 'Himachali',
    'hin': 'Hindi',
    'hit': 'Hittite',
    'hmn': 'Hmong; Mong',
    'hmo': 'Hiri Motu',
    'hrv': 'Croatian',
    'hsb': 'Upper Sorbian',
    'hun': 'Hungarian',
    'hup': 'Hupa',
    'iba': 'Iban',
    'ibo': 'Igbo',
    'ice': 'Icelandic',
    'ido': 'Ido',
    'iii': 'Sichuan Yi',
    'ijo': 'Ijo',
    'iku': 'Inuktitut',
    'ile': 'Interlingue',
    'ilo': 'Iloko',
    'ina': 'Interlingua',
    'inc': 'Indic',
    'ind': 'Indonesian',
    'ine': 'Indo-European',
    'inh': 'Ingush',
    'ipk': 'Inupiaq',
    'ira': 'Iranian',
    'iro': 'Iroquoian',
    'ita': 'Italian',
    'jav': 'Javanese',
    'jbo': 'Lojban',
    'jpn': 'Japanese',
    'jpr': 'Judeo-Persian',
    'jrb': 'Judeo-Arabic',
    'kaa': 'Kara-Kalpak',
    'kab': 'Kabyle',
    'kac': 'Kachin',
    'kal': 'Kalaallisut',
    'kam': 'Kamba',
    'kan': 'Kannada',
    'kar': 'Karen',
    'kas': 'Kashmiri',
    'kau': 'Kanuri',
    'kaw': 'Kawi',
    'kaz': 'Kazakh',
    'kbd': 'Kabardian',
    'kha': 'Khasi',
    'khi': 'Khoisan',
    'khm': 'Central Khmer',
    'kho': 'Khotanese',
    'kik': 'Kikuyu',
    'kin': 'Kinyarwanda',
    'kir': 'Kirghiz',
    'kmb': 'Kimbundu',
    'kok': 'Konkani',
    'kom': 'Komi',
    'kon': 'Kongo',
    'kor': 'Korean',
    'kos': 'Kosraean',
    'kpe': 'Kpelle',
    'krc': 'Karachay-Balkar',
    'krl': 'Karelian',
    'kro': 'Kru',
    'kru': 'Kurukh',
    'kua': 'Kuanyama',
    'kum': 'Kumyk',
    'kur': 'Kurdish',
    'kut': 'Kutenai',
    'lad': 'Ladino',
    'lah': 'Lahnda',
    'lam': 'Lamba',
    'lao': 'Lao',
    'lat': 'Latin',
    'lav': 'Latvian',
    'lez': 'Lezghian',
    'lim': 'Limburgan',
    'lin': 'Lingala',
    'lit': 'Lithuanian',
    'lol': 'Mongo',
    'loz': 'Lozi',
    'ltz': 'Luxembourgish',
    'lua': 'Luba-Lulua',
    'lub': 'Luba-Katanga',
    'lug': 'Ganda',
    'lui': 'Luiseno',
    'lun': 'Lunda',
    'luo': 'Luo',
    'lus': 'Lushai',
    'mac': 'Macedonian',
    'mad': 'Madurese',
    'mag': 'Magahi',
    'mah': 'Marshallese',
    'mai': 'Maithili',
    'mak': 'Makasar',
    'mal': 'Malayalam',
    'man': 'Mandingo',
    'mao': 'Maori',
    'map': 'Austronesian',
    'mar': 'Marathi',
    'mas': 'Masai',
    'may': 'Malay',
    'mdf': 'Moksha',
    'mdr': 'Mandar',
    'men': 'Mende',
    'mic': "Mi'kmaq",
    'min': 'Minangkabau',
    'mis': 'Uncoded',
    'mkh': 'Mon-Khmer',
    'mlg': 'Malagasy',
    'mlt': 'Maltese',
    'mnc': 'Manchu',
    'mni': 'Manipuri',
    'mno': 'Manobo',
    'moh': 'Mohawk',
    'mon': 'Mongolian',
    'mos': 'Mossi',
    'mul': 'Multiple',
    'mun': 'Munda',
    'mus': 'Creek',
    'mwl': 'Mirandese',
    'mwr': 'Marwari',
    'myn': 'Mayan',
    'myv': 'Erzya',
    'nah': 'Nahuatl',
    'nai': 'North American Indian',
    'nap': 'Neapolitan',
    'nau': 'Nauru',
    'nav': 'Navajo',
    'nbl': 'Ndebele, South',
    'nde': 'Ndebele, North',
    'ndo': 'Ndonga',
    'nep': 'Nepali',
    'new': 'Nepal Bhasa',
    'nia': 'Nias',
    'nic': 'Niger-Kordofanian',
    'niu': 'Niuean',
    'nog': 'Nogai',
    'nor': 'Norwegian',
    'nqo': "N'Ko",
    'nso': 'Pedi',
    'nub': 'Nubian',
    'nya': 'Chichewa',
    'nym': 'Nyamwezi',
    'nyn': 'Nyankole',
    'nyo': 'Nyoro',
    'nzi': 'Nzima',
    'oji': 'Ojibwa',
    'ori': 'Oriya',
    'orm': 'Oromo',
    'osa': 'Osage',
    'oss': 'Ossetian',
    'oto': 'Otomian',
    'paa': 'Papuan',
    'pag': 'Pangasinan',
    'pal': 'Pahlavi',
    'pam': 'Pampanga',
    'pan': 'Panjabi',
    'pap': 'Papiamento',
    'pau': 'Palauan',
    'per': 'Persian',
    'phi': 'Philippine',
    'phn': 'Phoenician',
    'pli': 'Pali',
    'pol': 'Polish',
    'pon': 'Pohnpeian',
    'por': 'Portuguese',
    'pra': 'Prakrit',
    'pus': 'Pushto',
    'que': 'Quechua',
    'raj': 'Rajasthani',
    'rap': 'Rapanui',
    'rar': 'Rarotongan',
    'roa': 'Romance',
    'roh': 'Romansh',
    'rom': 'Romany',
    'rum': 'Romanian',
    'run': 'Rundi',
    'rup': 'Aromanian',
    'rus': 'Russian',
    'sad': 'Sandawe',
    'sag': 'Sango',
    'sah': 'Yakut',
    'sai': 'South American Indian',
    'sal': 'Salishan',
    'sam': 'Samaritan Aramaic',
    'san': 'Sanskrit',
    'sas': 'Sasak',
    'sat': 'Santali',
    'scn': 'Sicilian',
    'sco': 'Scots',
    'sel': 'Selkup',
    'sem': 'Semitic',
    'sgn': 'Sign',
    'shn': 'Shan',
    'sid': 'Sidamo',
    'sin': 'Sinhala',
    'sio': 'Siouan',
    'sit': 'Sino-Tibetan',
    'sla': 'Slavic',
    'slo': 'Slovak',
    'slv': 'Slovenian',
    'sma': 'Southern Sami',
    'sme': 'Northern Sami',
    'smi': 'Sami',
    'smj': 'Lule Sami',
    'smn': 'Inari Sami',
    'smo': 'Samoan',
    'sms': 'Skolt Sami',
    'sna': 'Shona',
    'snd': 'Sindhi',
    'snk': 'Soninke',
    'sog': 'Sogdian',
    'som': 'Somali',
    'son': 'Songhai',
    'sot': 'Sotho, Southern',
    'spa': 'Spanish',
    'srd': 'Sardinian',
    'srn': 'Sranan Tongo',
    'srp': 'Serbian',
    'srr': 'Serer',
    'ssa': 'Nilo-Saharan',
    'ssw': 'Swati',
    'suk': 'Sukuma',
    'sun': 'Sundanese',
    'sus': 'Susu',
    'sux': 'Sumerian',
    'swa': 'Swahili',
    'swe': 'Swedish',
    'syc': 'Classical Syriac',
    'syr': 'Syriac',
    'tah': 'Tahitian',
    'tai': 'Tai',
    'tam': 'Tamil',
    'tat': 'Tatar',
    'tel': 'Telugu',
    'tem': 'Timne',
    'ter': 'Tereno',
    'tet': 'Tetum',
    'tgk': 'Tajik',
    'tgl': 'Tagalog',
    'tha': 'Thai',
    'tib': 'Tibetan',
    'tig': 'Tigre',
    'tir': 'Tigrinya',
    'tiv': 'Tiv',
    'tkl': 'Tokelau',
    'tlh': 'Klingon',
    'tli': 'Tlingit',
    'tmh': 'Tamashek',
    'tog': 'Tonga (Nyasa)',
    'ton': 'Tonga (Tonga Islands)',
    'tpi': 'Tok Pisin',
    'tsi': 'Tsimshian',
    'tsn': 'Tswana',
    'tso': 'Tsonga',
    'tuk': 'Turkmen',
    'tum': 'Tumbuka',
    'tup': 'Tupi',
    'tur': 'Turkish',
    'tut': 'Altaic',
    'tvl': 'Tuvalu',
    'twi': 'Twi',
    'tyv': 'Tuvinian',
    'udm': 'Udmurt',
    'uga': 'Ugaritic',
    'uig': 'Uighur',
    'ukr': 'Ukrainian',
    'umb': 'Umbundu',
    'urd': 'Urdu',
    'uzb': 'Uzbek',
    'vai': 'Vai',
    'ven': 'Venda',
    'vie': 'Vietnamese',
    'vol': 'VolapÃ¼k',
    'vot': 'Votic',
    'wak': 'Wakashan',
    'wal': 'Wolaitta',
    'war': 'Waray',
    'was': 'Washo',
    'wel': 'Welsh',
    'wen': 'Sorbian',
    'wln': 'Walloon',
    'wol': 'Wolof',
    'xal': 'Kalmyk',
    'xho': 'Xhosa',
    'yao': 'Yao',
    'yap': 'Yapese',
    'yid': 'Yiddish',
    'yor': 'Yoruba',
    'ypk': 'Yupik',
    'zap': 'Zapotec',
    'zbl': 'Blissymbols',
    'zen': 'Zenaga',
    'zgh': 'Standard Moroccan Tamazight',
    'zha': 'Zhuang',
    'znd': 'Zande',
    'zul': 'Zulu',
    'zun': 'Zuni',
    'zza': 'Zaza',
}

LOWER_NAME_TO_ISO_639_1: Dict[str, str] = __build_language_to_code(ISO_639_1_TO_LANGUAGE)

LOWER_NAME_TO_ISO_639_2: Dict[str, str] = __build_language_to_code(ISO_639_2_TO_LANGUAGE)


class Language:

    unknown: "Language"
    english: "Language"
    chinese: "Language"
    hindi: "Language"
    spanish: "Language"
    french: "Language"
    japanese: "Language"

    def __init__(self, name: str, two_letter_code: str = None, three_letter_code: str = None) -> None:
        assert name
        name = name.lower()
        if not two_letter_code:
            two_letter_code = LOWER_NAME_TO_ISO_639_1.get(name)
        if not three_letter_code:
            three_letter_code = LOWER_NAME_TO_ISO_639_2.get(name)
        if not two_letter_code and not three_letter_code:
            name = name.split("(", 1)[0].strip()
            two_letter_code = LOWER_NAME_TO_ISO_639_1.get(name)
            three_letter_code = LOWER_NAME_TO_ISO_639_2.get(name)
            if not two_letter_code and not three_letter_code:
                raise Exception('Could not resolve language codes for ' + name)
        self.name: str = name
        self.two_letter_code: str = two_letter_code or three_letter_code
        self.three_letter_code: str = three_letter_code or two_letter_code

    def __eq__(self, other) -> bool:
        if isinstance(other, Language):
            return self.name == other.name  # or self.two_letter_code == other.two_letter_code
        return False

    def __hash__(self) -> int:
        return hash(self.name)

    def __str__(self) -> str:
        return self.name

    def __repr__(self) -> str:
        return "%s(name=%s, 2lc=%s, 3lc=%s)" % (type(self).__name__, self.name, self.two_letter_code, self.three_letter_code)

    @staticmethod
    def from_2_or_3_letter_code(two_letter_code: str) -> "Language":
        assert two_letter_code
        name = ISO_639_1_TO_LANGUAGE.get(two_letter_code) or ISO_639_2_TO_LANGUAGE.get(two_letter_code)
        return Language(name) if name else Language.unknown

    @staticmethod
    def from_3_or_2_letter_code(three_letter_code: str) -> "Language":
        assert three_letter_code
        name = ISO_639_2_TO_LANGUAGE.get(three_letter_code) or ISO_639_1_TO_LANGUAGE.get(three_letter_code)
        return Language(name) if name else Language.unknown

    @staticmethod
    # def _build_languages(values: Iterable[str] | Dict[str, str]) -> Set[Language]:
    def build_languages_set(values) -> Set["Language"]:
        languages: Set[Language] = set()
        if isinstance(values, dict):
            [(Language.__try_build_and_add_language(key, languages),
              Language.__try_build_and_add_language(value, languages)) for key, value in values.items()]
        else:
            [Language.__try_build_and_add_language(value, languages) for value in values]
        return languages

    @staticmethod
    def __try_build_and_add_language(value: str, languages: Set["Language"]) -> None:
        try:
            language = Language(value)
        except:
            try:
                language = Language.from_2_or_3_letter_code(value)
            except:
                language = Language.unknown
        else:
            if language != Language.unknown:
                languages.add(language)


Language.unknown = Language("Unknown", "xx", "xxx")
Language.english = Language.from_2_or_3_letter_code("en")
Language.chinese = Language.from_2_or_3_letter_code("zh")
Language.hindi = Language.from_2_or_3_letter_code("hi")
Language.spanish = Language.from_2_or_3_letter_code("es")
Language.french = Language.from_2_or_3_letter_code("fr")
Language.japanese = Language.from_2_or_3_letter_code("jp")
